// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// binaryTargets: 
// Specify the OS on which the Prisma Client will run to ensure compatibility of the query engine. 

// value => Build OS

// linux-musl-openssl-3.0.x => Linux Alpine v3.17 x86_x64 (Docker Container uses Alpine)
// darwin => macOS Intel x86 | darwin-arm64 => macOS ARM64
// windows => Windows
// debian-openssl-1.1.x => Ubuntu v18 - v20| Mint v19 - v20

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PaymentRequestsGeneral {
  uid String @id @default(uuid())

  description       String?
  sendReceipt       Boolean  @default(false) @map("send_receipt")
  totalRequestValue Float    @map("total_request_value")
  dueDate           DateTime @map("due_date")

  createdAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @default(now()) @updatedAt @map("update_at")

  @@map("payment_requests_general")
}

model User {
  uid String @id @default(uuid())

  idUserAd String @unique @map("id_user_ad")
  name     String
  email    String @unique

  enable Boolean @default(true)

  @@map("user")
}

model Categories {
  uid String @id @default(uuid())

  name   String  @db.VarChar(50)
  enable Boolean @default(true)

  createdAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @default(now()) @updatedAt @map("update_at")

  products Products[]

  @@map("categories")
}

model Products {
  uid String @id @default(uuid())

  categoryId String
  category   Categories @relation(fields: [categoryId], references: [uid])

  code         String  @db.VarChar(50)
  name         String  @db.VarChar(50)
  enable       Boolean @default(true)
  measurement String? @db.VarChar(50)
  quantity     Int?

  createdAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @default(now()) @updatedAt @map("update_at")

  @@map("products")
}
